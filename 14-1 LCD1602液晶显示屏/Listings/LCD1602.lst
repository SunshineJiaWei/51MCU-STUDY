C51 COMPILER V9.60.7.0   LCD1602                                                           06/04/2024 09:25:46 PAGE 1   


C51 COMPILER V9.60.7.0, COMPILATION OF MODULE LCD1602
OBJECT MODULE PLACED IN .\Objects\LCD1602.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE LCD1602.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Listings\L
                    -CD1602.lst) OBJECT(.\Objects\LCD1602.obj)

line level    source

   1          #include <REGX52.H>
   2          
   3          sbit LCD_E = P2^7;
   4          sbit LCD_RS = P2^6;
   5          sbit LCD_RW = P2^5;
   6          
   7          #define LCD_DaatPort P0
   8          
   9          void LCD_Delay()                //@11.0592MHz 1ms
  10          {
  11   1              unsigned char i, j;
  12   1      
  13   1              i = 2;
  14   1              j = 199;
  15   1              do
  16   1              {
  17   2                      while (--j);
  18   2              } while (--i);
  19   1      }
  20          
  21          
  22          void LCD_WriteCommand(unsigned char Command)
  23          {
  24   1              LCD_RS = 0;
  25   1              LCD_RW = 0;
  26   1              LCD_DaatPort = Command;
  27   1              LCD_E = 1;
  28   1              LCD_Delay();
  29   1              LCD_E = 0; 
  30   1              LCD_Delay();
  31   1      }
  32          
  33          void LCD_WriteData(unsigned char Data)
  34          {
  35   1              LCD_RS = 1;
  36   1              LCD_RW = 0;
  37   1              LCD_DaatPort = Data;
  38   1              LCD_E = 1;
  39   1              LCD_Delay();
  40   1              LCD_E = 0; 
  41   1              LCD_Delay();
  42   1      } 
  43          
  44          void LCD_Init()
  45          {
  46   1              LCD_WriteCommand(0x38);
  47   1              LCD_WriteCommand(0x0C);
  48   1              LCD_WriteCommand(0x06);
  49   1              LCD_WriteCommand(0x01);
  50   1      }
  51          
  52          void LCD_SetCursor(unsigned char Line, unsigned char Column)
  53          {
  54   1              if(Line == 1)
C51 COMPILER V9.60.7.0   LCD1602                                                           06/04/2024 09:25:46 PAGE 2   

  55   1              {
  56   2                      LCD_WriteCommand(0x80 | (Column-1));
  57   2              }
  58   1              else
  59   1              {
  60   2                      LCD_WriteCommand(0x80 | (Column-1) + 0x40);
  61   2              }
  62   1      }
  63          
  64          void LCD_ShowChar(unsigned char Line, unsigned char Column, unsigned char Char)
  65          {
  66   1              LCD_SetCursor(Line,Column);
  67   1              LCD_WriteData(Char);
  68   1      }
  69          
  70          void LCD_ShowString(unsigned char Line, unsigned char Column, unsigned char *String)
  71          {
  72   1              unsigned char i;
  73   1              LCD_SetCursor(Line,Column);
  74   1              for(i=0;String[i] != '\0';i++)
  75   1              {
  76   2                      LCD_WriteData(String[i]);
  77   2              }
  78   1      }
  79          
  80          int LCD_Pow(int X, int Y)
  81          {
  82   1              unsigned char i;
  83   1              int Result = 1;
  84   1              for(i = 0;i < Y;i++)
  85   1              {
  86   2                      Result *= X;
  87   2              }
  88   1              return Result;
  89   1      }
  90          
  91          void LCD_ShowNum(unsigned char Line, unsigned char Column, unsigned int Number, unsigned char Length)
  92          {
  93   1              unsigned char i;
  94   1              LCD_SetCursor(Line,Column);
  95   1              for(i = Length;i > 0;i--)
  96   1              {
  97   2                      LCD_WriteData('0' + Number / LCD_Pow(10,i-1) % 10);
  98   2              }
  99   1      }
 100          
 101          void LCD_ShowSignedNum(unsigned char Line, unsigned char Column, int Number, unsigned char Length)
 102          {
 103   1              unsigned char i;
 104   1              unsigned int UnSignedNumber;
 105   1              LCD_SetCursor(Line,Column);
 106   1              if(Number >= 0)
 107   1              {
 108   2                      LCD_WriteData('+');
 109   2                      UnSignedNumber = Number;
 110   2              }
 111   1              else
 112   1              {
 113   2                      LCD_WriteData('-');
 114   2                      UnSignedNumber = -Number;
 115   2              }
 116   1              for(i = Length;i > 0;i--)
C51 COMPILER V9.60.7.0   LCD1602                                                           06/04/2024 09:25:46 PAGE 3   

 117   1              {
 118   2                      LCD_WriteData('0' + UnSignedNumber / LCD_Pow(10,i-1) % 10);
 119   2              }
 120   1      }
 121          
 122          void LCD_ShowHexNum(unsigned char Line, unsigned char Column, int Number, unsigned char Length)
 123          {
 124   1              unsigned char i;
 125   1              unsigned char SingleNum;
 126   1              LCD_SetCursor(Line,Column);
 127   1              for(i = Length;i > 0;i--)
 128   1              {
 129   2                      SingleNum = Number / LCD_Pow(16,i-1) % 16;
 130   2                      if(SingleNum < 10)
 131   2                      {
 132   3                              LCD_WriteData('0' + SingleNum);
 133   3                      }
 134   2                      else
 135   2                      {
 136   3                              LCD_WriteData('A' + SingleNum - 10);
 137   3                      }
 138   2              }
 139   1      }
 140          
 141          void LCD_ShowBinNum(unsigned char Line, unsigned char Column, int Number, unsigned char Length)
 142          {
 143   1              unsigned char i;
 144   1              LCD_SetCursor(Line,Column);
 145   1              for(i = Length;i > 0;i--)
 146   1              {
 147   2                      LCD_WriteData('0' + Number / LCD_Pow(2,i-1) % 2);
 148   2              }
 149   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    394    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      29
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
